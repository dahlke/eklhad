make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.


# Make data base, printed on Mon Aug  1 12:03:21 2022

# Variables

# environment
JENV_SHELL = zsh
# automatic
?F = $(notdir $?)
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from `Makefile', line 6)
PACKER_GCP_DEF_PATH = packer/gcp/image.pkr.hcl
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from `Makefile', line 11)
PACKER_GCP_CIRCLECI_IMAGE_ID = `tail -n 1 /go/src/github.com/dahlke/eklhad/packer/gcp/output/image.txt | awk '{print $$8}'`
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/neildahlke/src/github.com/dahlke/eklhad
# makefile (from `Makefile', line 1)
SHELL := /bin/bash
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from `Makefile', line 24)
DOCKER_HUB_USER = eklhad
# environment
HISTCONTROL = ignorespace
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
AUTOJUMP_SOURCED = 1
# environment
__CFBundleIdentifier = com.microsoft.VSCodeInsiders
# environment
INFOPATH = /opt/homebrew/share/info:
# makefile (from `Makefile', line 27)
DOCKER_WEB_IMAGE_VERSION = 0.1.1
# environment
VSCODE_CWD = /
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /Users/neildahlke/.jenv/shims:/Users/neildahlke/.jenv/bin:/Users/neil/src/github.com/hashicorp-community/tf-helper/tfh/bin:/usr/local/opt/openssl/bin:/usr/local/opt/openssl@1.1/bin:/usr/local/opt/mysql-client/bin:/Users/neildahlke/bin:/usr/local/go/bin:/Users/neildahlke/Library/Python/3.7/bin:/usr/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/neildahlke/.rvm/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `Makefile', line 8)
PACKER_AWS_IMAGE_CMD = `tail -n 1 /Users/neildahlke/src/github.com/dahlke/eklhad/packer/aws/output/image.txt | awk '{print $$6}' | cut -c 1-21`
# makefile (from `Makefile', line 30)
DOCKER_TEST_IMAGE_VERSION = 0.1.2
# makefile (from `Makefile', line 21)
WEB_APP_GO_BINARY_PATH = web/main
# environment
GOPATH = /Users/neildahlke
# makefile (from `Makefile', line 13)
PACKER_GCP_OUTPUT_DIR = packer/gcp/output/
# environment
LaunchInstanceID = 5D18C080-6CB2-44DB-8977-875822436417
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
PUPPETEER_EXECUTABLE_PATH = /opt/homebrew/bin/chromium
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.zO8kPb0zW4/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `Makefile', line 22)
WEB_APP_CONFIG_PATH = web/config.json
# makefile (from `Makefile', line 18)
TF_AWS_APP_DIR = ${CWD}/terraform/aws
# environment
PWD = /Users/neildahlke/src/github.com/dahlke/eklhad
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/neildahlke/pkg/mod
# environment
HOME = /Users/neildahlke
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/neildahlke/Library/Application Support/Code - Insiders/CachedData/62469028a6dce9db5b7c4639be7f447f4ab0e35c
# environment
LOGNAME = neildahlke
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from `Makefile', line 7)
PACKER_AWS_DEF_PATH = packer/aws/image.pkr.hcl
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
CONSUL_HELM_PATH = /Users/neildahlke/src/github.com/hashicorp/consul-helmexport
# environment
XPC_FLAGS = 0x0
# makefile (from `Makefile', line 20)
WEB_APP_FRONTEND_BUILD_DIR = web/frontend/build/
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = neildahlke
# makefile
.DEFAULT_GOAL := npm
# environment
JENV_LOADED = 1
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/cd/mg_l4tnd4d568z4yzzn9r2p40000gq/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/neildahlke/Library/Application Support/Code - Insiders/1.70.0-insider-main.sock
# environment
MallocNanoZone = 0
# makefile (from `Makefile', line 26)
DOCKER_WEB_IMAGE_NAME = eklhad-web
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCodeInsiders.34546241.34546247
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `Makefile', line 15)
ARTIFACT_DIR_LINUX = ${CWD}/artifact/tar/linux
# environment
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD = true
# automatic
+F = $(notdir $+)
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# makefile (from `Makefile', line 9)
PACKER_GCP_IMAGE_CMD = `tail -n 1 /Users/neildahlke/src/github.com/dahlke/eklhad/packer/gcp/output/image.txt | awk '{print $$8}'`
# environment
__CF_USER_TEXT_ENCODING = 0x1F7:0x0:0x0
# environment
COMMAND_MODE = unix2003
# makefile (from `Makefile', line 4)
CWD := /Users/neildahlke/src/github.com/dahlke/eklhad
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 14)
PACKER_AWS_OUTPUT_DIR = packer/aws/output/
# makefile (from `Makefile', line 3)
WEB_APP_TAR_NAME = eklhad-web.tar.gz
# environment
EDITOR = vim
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from `Makefile', line 19)
WEB_APP_SRC_DIR = web/
# environment
SECURITYSESSIONID = 186b3
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 16)
ARTIFACT_DIR_MACOS = ${CWD}/artifact/tar/macos
# makefile (from `Makefile', line 17)
TF_GCP_APP_DIR = ${CWD}/terraform/gcp
# makefile (from `Makefile', line 29)
DOCKER_TEST_IMAGE_NAME = eklhad-web-circleci
# makefile (from `Makefile', line 2)
WEB_APP_NAME = eklhad-web
# environment
MAKELEVEL := 0
# environment
AUTOJUMP_ERROR_PATH = /Users/neildahlke/Library/autojump/errors.log
# environment
LANG = C
# environment
VSCODE_PID = 605
# variable set hash-table stats:
# Load=102/1024=10%, Rehash=0, Collisions=6/128=5%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777232, inode 914554): 22 files, no impossibilities.

# 22 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

tf_apply_aws_auto: tf_aws_init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 197):
	cd ${TF_AWS_APP_DIR} && terraform apply -var "aws_image_id=${PACKER_AWS_IMAGE_CMD}" -auto-approve
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: npm js_lint js_lint_fix js_lint_fix_dry resume frontend_test frontend_test_watch frontend_start frontend_build frontend_audit_fix go_lint go_get go_test go_server_start go_build_linux go_build_macos collect_data artifact_linux_web artifact_macos_web image_gcp image_aws tf_init_gcp tf_plan_gcp tf_apply_gcp tf_apply_gcp_auto tf_apply_gcp_rotate_certs_auto tf_out_gcp tf_destroy_gcp tf_destroy_gcp_auto tf_aws_init tf_plan_aws tf_apply_aws tf_apply_aws_auto tf_apply_aws_rotate_certs_auto tf_out_aws tf_destroy_aws tf_destroy_aws_auto
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

artifact_macos_web: go_build_macos
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  commands to execute (from `Makefile', line 132):
	mkdir -p ${ARTIFACT_DIR_MACOS};
	tar zcf ${ARTIFACT_DIR_MACOS}/${WEB_APP_TAR_NAME} ${WEB_APP_FRONTEND_BUILD_DIR} ${WEB_APP_GO_BINARY_PATH} ${WEB_APP_CONFIG_PATH};
	

docker_push_circleci:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 252):
	docker push ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):$(DOCKER_TEST_IMAGE_VERSION)
	docker push ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):latest
	

frontend_build: npm resume
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 76):
	cd web/frontend/ && npm run-script build
	

npm:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 38):
	cd web/frontend && npm config set strict-ssl false && npm install
	

collect_data:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 116):
	cd web && \
	go run main.go -github && \
	go run main.go -instagram && \
	go run main.go -twitter && \
	go run main.go -gsheets;
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

frontend_test: npm resume
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 64):
	cd web/frontend/ && npm run-script test-once
	

tf_init_gcp:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 150):
	cd ${TF_GCP_APP_DIR} && terraform init
	

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-08 19:07:01
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

tf_destroy_gcp:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 174):
	cd ${TF_GCP_APP_DIR} && terraform destroy -var "gcp_image_id=${PACKER_GCP_IMAGE_CMD}"
	

docker_build_web:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 223):
	docker build --platform linux/amd64 -t ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION) . && \
	docker tag ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION) ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION) && \
	docker tag ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION) ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):latest
	

tf_destroy_gcp_auto:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 178):
	cd ${TF_GCP_APP_DIR} && terraform destroy -var "gcp_image_id=${PACKER_GCP_IMAGE_CMD}" -auto-approve
	

tf_apply_aws_rotate_certs_auto: tf_init_aws
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 203):
	cd ${TF_AWS_APP_DIR} && terraform apply -var "aws_image_id=${PACKER_AWS_IMAGE_CMD}" -replace "acme_certificate.certificate" -auto-approve
	

go_build_linux:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 104):
	cd web && GOOS=linux GOARCH=amd64 go build main.go
	

tf_out_gcp:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 170):
	cd ${TF_GCP_APP_DIR} && terraform output
	

tf_plan_gcp: tf_init_gcp
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 154):
	cd ${TF_GCP_APP_DIR} && terraform plan -var "gcp_image_id=$(PACKER_GCP_IMAGE_CMD)"
	

image_gcp:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 137):
	mkdir -p ${PACKER_GCP_OUTPUT_DIR};
	packer -machine-readable build ${PACKER_GCP_DEF_PATH} >> ${PACKER_GCP_OUTPUT_DIR}image.txt;
	

resume: npm
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 58):
	cd web/frontend/conf/ && \
	npx resume export resume.html --format html --theme classic && \
	mv ${CWD}/web/frontend/conf/resume.html ${CWD}/web/frontend/public/static/resume.html;
	

frontend_audit_fix: npm
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 80):
	cd web/frontend/ && npm audit fix
	

frontend_start: npm resume
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 72):
	cd web/frontend/ && npm run-script start
	

tf_apply_gcp: tf_init_gcp
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 158):
	cd ${TF_GCP_APP_DIR} && terraform apply -var "gcp_image_id=${PACKER_GCP_IMAGE_CMD}"
	

docker_build_circleci:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 246):
	cd .circleci && \
	docker build --platform linux/amd64 -t ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):$(DOCKER_TEST_IMAGE_VERSION) . && \
	docker tag ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):$(DOCKER_TEST_IMAGE_VERSION) ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):$(DOCKER_TEST_IMAGE_VERSION) && \
	docker tag ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):$(DOCKER_TEST_IMAGE_VERSION) ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):latest
	

frontend_test_watch: npm resume
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 68):
	cd web/frontend/ && npm run-script test
	

docker_run_web_dev:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 238):
	docker run \
	-v ${CWD}/web:/web \
	-it  \
	-p 3554:3554 \
	${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION)
	# ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION) -port 3000
	

tf_apply_gcp_auto: tf_init_gcp
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 162):
	cd ${TF_GCP_APP_DIR} && terraform apply -var "gcp_image_id=${PACKER_GCP_IMAGE_CMD}" -auto-approve
	

go_build_macos:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	cd web && GOOS=darwin GOARCH=amd64 go build main.go
	

# Not a target:
.DEFAULT:
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

docker_run_web:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 232):
	docker run \
	-it  \
	-p 3554:3554 \
	${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION)
	

js_lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 42):
	cd web/frontend/ && \
	node node_modules/eslint/bin/eslint.js src/*.js* src/**/*.js*
	

js_lint_fix_dry:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 53):
	cd web/frontend/ && \
	node node_modules/eslint/bin/eslint.js --fix-dry-run src/*.js src/**/*.js
	

# Not a target:
tf_init_aws:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

tf_aws_init:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 185):
	cd ${TF_AWS_APP_DIR} && terraform init
	

tf_destroy_aws:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 212):
	cd ${TF_AWS_APP_DIR} && terraform destroy -var "aws_image_id=${PACKER_AWS_IMAGE_CMD}"
	

go_get:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 92):
	cd web && go get
	

tf_destroy_aws_auto:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 216):
	cd ${TF_AWS_APP_DIR} && terraform destroy -var "aws_image_id=${PACKER_AWS_IMAGE_CMD}" -auto-approve
	

go_test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 96):
	cd web && go test -v ./... -coverprofile=coverage.out
	

go_lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 88):
	golint web/...
	

docker_run_circleci:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 256):
	docker run -it ${DOCKER_HUB_USER}/$(DOCKER_TEST_IMAGE_NAME):$(DOCKER_TEST_IMAGE_VERSION)
	

js_lint_fix:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 47):
	cd web/frontend/ && \
	node node_modules/eslint/bin/eslint.js --fix src/**/*.js*
	# node node_modules/eslint/bin/eslint.js --fix src/*.js* src/**/*.js*
	

tf_out_aws:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 208):
	cd ${TF_AWS_APP_DIR} && terraform output
	

tf_plan_aws: tf_aws_init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 189):
	cd ${TF_AWS_APP_DIR} && terraform plan -var "aws_image_id=$(PACKER_AWS_IMAGE_CMD)"
	

image_aws:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 142):
	mkdir -p ${PACKER_AWS_OUTPUT_DIR};
	packer -machine-readable build ${PACKER_AWS_DEF_PATH} >> ${PACKER_AWS_OUTPUT_DIR}image.txt;
	

docker_push_web:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 228):
	docker push ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):$(DOCKER_WEB_IMAGE_VERSION)
	docker push ${DOCKER_HUB_USER}/$(DOCKER_WEB_IMAGE_NAME):latest
	

tf_apply_gcp_rotate_certs_auto: tf_init_gcp
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 166):
	cd ${TF_GCP_APP_DIR} && terraform apply -var "gcp_image_id=${PACKER_GCP_IMAGE_CMD}" -replace "acme_certificate.certificate" -auto-approve
	

go_server_start:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 100):
	cd web && go run main.go
	

tf_apply_aws: tf_aws_init
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 193):
	cd ${TF_AWS_APP_DIR} && terraform apply -var "aws_image_id=${PACKER_AWS_IMAGE_CMD}"
	

artifact_linux_web: go_build_linux
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 127):
	mkdir -p ${ARTIFACT_DIR_LINUX};
	tar zcf ${ARTIFACT_DIR_LINUX}/${WEB_APP_TAR_NAME} ${WEB_APP_FRONTEND_BUILD_DIR} ${WEB_APP_GO_BINARY_PATH} ${WEB_APP_CONFIG_PATH};
	

# files hash-table stats:
# Load=50/1024=5%, Rehash=0, Collisions=0/155=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Mon Aug  1 12:03:21 2022

 
